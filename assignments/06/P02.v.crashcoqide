Require Export P01.



(** Given a boolean operator [beq] for testing equality of elements of
    some type [A], we can define a function [beq_list beq] for testing
    equality of lists with elements in [A].  Complete the definition
    of the [beq_list] function below.  To make sure that your
    definition is correct, prove the lemma [beq_list_true_iff]. *)

Fixpoint beq_list {A} (beq : A -> A -> bool)
                  (l1 l2 : list A) : bool :=
  match l1 with
  |[]=> match l2 with 
        |[]=>true
        |hd::tl=>false
        end
  |hd1::tl1=>match l2 with
             |[]=>false
             |hd2::tl2=> if (beq hd1 hd2) then (beq_list beq tl1 tl2) else false
             end
  end.

Lemma beq_list_true_iff :
  forall A (beq : A -> A -> bool),
    (forall a1 a2, beq a1 a2 = true <-> a1 = a2) ->
    forall l1 l2, beq_list beq l1 l2 = true <-> l1 = l2.
Proof. intros. split.
induction l1 as [| hd1 tl1].
induction l2 as [| hd2 tl2].
reflexivity.
simpl. intros. inversion H0.
inversion IHtl1. simpl. 


Qed.

